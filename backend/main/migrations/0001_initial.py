# Generated by Django 5.2.1 on 2025-05-24 12:52

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Anime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
                ('synopsis', models.TextField(blank=True, null=True)),
                ('total_episodes', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
                ('aired_from', models.DateField(blank=True, null=True)),
                ('aired_to', models.DateField(blank=True, null=True)),
                ('image_url', models.TextField(blank=True, null=True)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('rating_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ListStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Studio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='AnimeGenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anime', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.anime')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.genre')),
            ],
            options={
                'unique_together': {('anime', 'genre')},
            },
        ),
        migrations.AddField(
            model_name='anime',
            name='genres',
            field=models.ManyToManyField(through='main.AnimeGenre', to='main.genre'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.SmallIntegerField()),
                ('review_text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('anime', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.anime')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AnimeStudio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anime', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.anime')),
                ('studio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.studio')),
            ],
            options={
                'unique_together': {('anime', 'studio')},
            },
        ),
        migrations.AddField(
            model_name='anime',
            name='studios',
            field=models.ManyToManyField(through='main.AnimeStudio', to='main.studio'),
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserAnimeList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.SmallIntegerField(blank=True, null=True)),
                ('episodes_watched', models.IntegerField(default=0)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('finish_date', models.DateField(blank=True, null=True)),
                ('priority', models.SmallIntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('anime', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.anime')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.liststatus')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'anime')},
            },
        ),
        migrations.CreateModel(
            name='ListTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.tag')),
                ('user_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.useranimelist')),
            ],
            options={
                'unique_together': {('user_list', 'tag')},
            },
        ),
    ]
